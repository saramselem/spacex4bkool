// Generated by https://quicktype.io
// ignore_for_file: unnecessary_null_comparison

import 'package:spacex_api/models/launch/launch.dart';

class Launches {
  List<Fairings> items = [];

  Launches.fromJsonList(List<dynamic> jsonList) {
    if (jsonList == null) return;

    for (var item in jsonList) {
      final launch = Fairings.fromJsonMap(item);
      items.add(launch);
    }
  }
}
class Fairings {
late int flightNumber;
late String missionName;
//late List<String>? missionId;
late String launchYear;
late int launchDateUnix;
late String launchDateUtc;
late String launchDateLocal;
late bool isTentative;
late String tentativeMaxPrecision;
late bool tbd;
late dynamic launchWindow;
late Rocket rocket;
late List<dynamic> ships;
late LaunchSite launchSite;
late dynamic launchSuccess;
late String details;
late bool upcoming;
late dynamic staticFireDateUtc;
late dynamic staticFireDateUnix;
late dynamic timeline;
late dynamic crew;
late String lastDateUpdate;
late dynamic lastLlLaunchDate;
late dynamic lastLlUpdate;
late String lastWikiLaunchDate;
late String lastWikiRevision;
late String lastWikiUpdate;
late String launchDateSource;

  Fairings({
required this.flightNumber,
required this.missionName,
//required this.missionId,
required this.launchYear,
required this.launchDateUnix,
required this.launchDateUtc,
required this.launchDateLocal,
required this.isTentative,
required this.tentativeMaxPrecision,
required this.tbd,
required this.launchWindow,
required this.rocket,
required this.ships,
required this.launchSite,
required this.launchSuccess,
required this.details,
required this.upcoming,
required this.staticFireDateUtc,
required this.staticFireDateUnix,
required this.timeline,
required this.crew,
required this.lastDateUpdate,
required this.lastLlLaunchDate,
required this.lastLlUpdate,
required this.lastWikiLaunchDate,
required this.lastWikiRevision,
required this.lastWikiUpdate,
required this.launchDateSource,
  });

Fairings.fromJsonMap(Map<String, dynamic> json){
flightNumber = json['flight_number'];
missionName = json['mission_name'];
//missionId = json['mission_id'];
launchYear = json['launch_year'];
launchDateUnix = json['launch_date_unix'];
launchDateUtc = json['launch_date_utc'];
launchDateLocal = json['launch_date_local'];
isTentative = json['is_tentative'];
tbd = json['tbd'];
launchWindow = json['launch_window'];
rocket = json['rocket'];
details = json['details'];
}

}

class LaunchSite {
  String siteId;
  String siteName;
  String siteNameLong;

  LaunchSite({
    required this.siteId,
    required this.siteName,
    required this.siteNameLong,
  });
}

class Rocket {
 late String rocketId;
 late String rocketName;
 late String rocketType;
 late FairingsClass fairings;

  Rocket({
    required this.rocketId,
    required this.rocketName,
    required this.rocketType,
    required this.fairings,
  });
}

class FairingsClass {
  dynamic reused;
  dynamic recoveryAttempt;
  dynamic recovered;
  dynamic ship;

  FairingsClass({
    this.reused,
    this.recoveryAttempt,
    this.recovered,
    this.ship,
  });
}

class Core {
 late String coreSerial;
 late int flight;
 late int block;
 late bool gridfins;
 late bool legs;
 late bool reused;
 late dynamic landSuccess;
 late bool landingIntent;
 late String landingType;
 late dynamic landingVehicle;

  Core({
  required this.coreSerial,
  required this.flight,
  required this.block,
  required this.gridfins,
  required this.legs,
  required this.reused,
  required this.landSuccess,
  required this.landingIntent,
  required this.landingType,
  required this.landingVehicle,
  });
}
